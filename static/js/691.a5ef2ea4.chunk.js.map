{"version":3,"file":"static/js/691.a5ef2ea4.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.styled.js","apiJs/film.js","components/AdditInform/AdditInform.styled.js","components/AdditInform/AdditInform.jsx","Pages/MovieDetails/MovieDetail.jsx","apiJs/refs.js","components/ErrMassage/ErrMasege.styled.js","components/ErrMassage/ErrMassage.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Section/Section.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Genres = styled.div`\n  display: flex;\n  gap: 10px;\n`;\nexport const FilmPageWrap = styled.div`\n  display: block;\n\n  button {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  width: 400px;\n  border-radius: 10px;\n  background-color: white;\n  padding: 10px;\n\n  box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n    0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n\n  img {\n    min-width: 100%;\n    border-radius: 10px;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 10px;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  font-size: 20px;\n  padding: 10px;\n`;\n\nexport const BackLink = styled.p`\n  display: block;\n  font-size: 15px;\n  font-weight: 600;\n  padding: 10px 20px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n  width: max-content;\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(204, 203, 203);\n  }\n\n  &:active {\n    background-color: rgb(179, 179, 179);\n  }\n`;\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmInfo = async id => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}${id}`, {\n    params: { api_key: refs.API_KEY },\n  });\n\n  return responce;\n};\nexport default getFilmInfo;\n","import styled from 'styled-components';\n\nexport const AdditInformWrap = styled.div`\n  h3 {\n    font-size: large;\n    font-weight: 600;\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { AddInfoList } from '../../Pages/MovieDetails/MovieDetails.styled';\nimport { AdditInformWrap } from './AdditInform.styled';\nimport { Link } from 'react-router-dom';\n\nconst AdditInform = () => {\n  return (\n    <AdditInformWrap>\n      <h3>Additional information</h3>\n      <AddInfoList>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </AddInfoList>\n    </AdditInformWrap>\n  );\n};\n\nexport default AdditInform;\n","import React, { Suspense, useRef, useState } from 'react';\nimport {\n  BackLink,\n  FilmPageWrap,\n  Genres,\n  ImgWrap,\n  InfoWrap,\n} from './MovieDetails.styled';\nimport { refs } from '../../apiJs/refs';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport getFilmInfo from '../../apiJs/film';\nimport { useEffect } from 'react';\nimport { Container } from 'components/Container/Container.styled';\nimport { Section } from 'components/Section/Section.styled';\nimport defaultPhoto from '../../img/noAvailable.jpg';\nimport { Loader } from 'components/Loader/Loader';\nimport AdditInform from '../../components/AdditInform/AdditInform';\nimport ErrMessage from 'components/ErrMassage/ErrMassage';\n\nconst MoveDetails = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const moveId = useParams();\n  const id = moveId.moviesId;\n  const [film, setFilm] = useState(moveId);\n\n  const { poster_path, title, vote_average, overview, genres = [] } = film;\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  // показує underfind і викидає на головну сторінку\n\n  // console.log(backLinkLocationRef);\n\n  useEffect(() => {\n    const getFilm = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const { data } = await getFilmInfo(id);\n        setFilm(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getFilm(id);\n  }, [id]);\n\n  const urlPoster = refs.POSTER_URL + poster_path;\n\n  return (\n    <main>\n      <Section>\n        {loader && <Loader />}\n        {error && <ErrMessage />}\n        {poster_path && (\n          <Container>\n            <FilmPageWrap>\n              <Link to={backLinkLocationRef.current}>\n                <BackLink>Go Back</BackLink>\n              </Link>\n              <InfoWrap>\n                <ImgWrap>\n                  <img\n                    src={poster_path ? urlPoster : defaultPhoto}\n                    alt=\"films poster\"\n                    width={300}\n                  />\n                </ImgWrap>\n                <div>\n                  <h1>{title}</h1>\n                  <div>\n                    <h2>User Score:</h2>\n                    <p> {Math.ceil(vote_average * 10)}%</p>\n                  </div>\n                  <div>\n                    <h2>Overview:</h2>\n                    <p> {overview}</p>\n                  </div>\n                  <div>\n                    <h2>Genres:</h2>\n                    <Genres>\n                      {genres.map(({ name, id }) => (\n                        <span key={id}>{name}</span>\n                      ))}\n                    </Genres>\n                  </div>\n                </div>\n              </InfoWrap>\n            </FilmPageWrap>\n            <AdditInform />\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </Container>\n        )}\n      </Section>\n    </main>\n  );\n};\n\nexport default MoveDetails;\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '8151a21e5e94d6656b5dd6100a756468',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMasege.styled';\n\nconst ErrMessage = () => {\n  return <ErrorText>Error, Please reload this page!</ErrorText>;\n};\n\nexport default ErrMessage;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <InfinitySpin\n        visible={true}\n        height=\"50\"\n        width=\"400\"\n        ariaLabel=\"infinity-spin-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        color=\"#353538\"\n      />\n    </LoaderWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n"],"names":["Genres","styled","div","_templateObject","_taggedTemplateLiteral","FilmPageWrap","_templateObject2","ImgWrap","_templateObject3","InfoWrap","_templateObject4","AddInfoList","ul","_templateObject5","BackLink","p","_templateObject6","async","axios","get","concat","refs","BASE_URL","id","params","api_key","API_KEY","AdditInformWrap","AdditInform","_jsxs","children","_jsx","Link","to","MoveDetails","_location$state$from","_location$state","loader","setLoader","useState","error","setError","moveId","useParams","moviesId","film","setFilm","poster_path","title","vote_average","overview","genres","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","data","getFilmInfo","getFilm","urlPoster","POSTER_URL","Section","Loader","ErrMessage","Container","current","src","defaultPhoto","alt","width","Math","ceil","map","_ref","name","Suspense","Outlet","ErrorText","LoaderWrap","LoadMessage","InfinitySpin","visible","height","ariaLabel","wrapperStyle","wrapperClass","color","section"],"sourceRoot":""}
{"version":3,"file":"static/js/926.00b31ca6.chunk.js","mappings":"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","sources":["components/ListMovies/ListMovies.jsx","apiJs/trend.js","Pages/Home.jsx","apiJs/refs.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/ListMovies/ListMovies.styled.js","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.js"],"sourcesContent":["import React from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst ListMovies = ({ trendMovies }) => {\n  return <MoviesList films={trendMovies} />;\n};\n\nexport default ListMovies;\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = 'trending/movie/week';\n\nconst getFetch = async () => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}`, {\n    params: {\n      api_key: refs.API_KEY,\n    },\n  });\n\n  return responce;\n};\nexport default getFetch;\n","import { Container } from 'components/Container/Container.styled';\nimport MoviesList from 'components/ListMovies/ListMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section.styled';\nimport getFetch from '../apiJs/trend';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const trendMovies = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { results },\n        } = await getFetch();\n        setMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    trendMovies();\n  }, []);\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <h1 style={{ marginTop: '40px', textAlign: 'center', color: 'gray' }}>\n            Trending this week\n          </h1>\n          {loader && <Loader />}\n          {movies.length > 0 && <MoviesList trendMovies={movies} />}\n        </Container>\n      </Section>\n      {error && <div>Error, Please reload this page!</div>}\n    </main>\n  );\n};\n\nexport default Home;\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '8151a21e5e94d6656b5dd6100a756468',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <InfinitySpin\n        visible={true}\n        height=\"50\"\n        width=\"400\"\n        ariaLabel=\"infinity-spin-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        color=\"#353538\"\n      />\n    </LoaderWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListNameMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n\n  li {\n    border-radius: 10px;\n    background-color: white;\n    padding: 10px;\n    width: 200px;\n    margin-bottom: 10px;\n    font-weight: 600;\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n      0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n    justify-content: center;\n  }\n\n  img {\n    border-radius: 10px;\n    margin-bottom: 5px;\n    display: block;\n  }\n`;\nexport const TitleFilm = styled.div`\n  display: flex;\n  padding: 10px 10px;\n  justify-content: center;\n  align-items: center;\n`;\n","import {\n  ListNameMovies,\n  TitleFilm,\n} from 'components/ListMovies/ListMovies.styled';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from '../../img/noAvailable.jpg';\n\nconst MoviesList = ({ films }) => {\n  const styleLink = {\n    textDecoration: 'none',\n    color: 'black',\n  };\n\n  const location = useLocation();\n  return (\n    <ListNameMovies>\n      {films.map(({ id, title, poster_path }) => {\n        return (\n          <li key={id}>\n            <Link\n              style={styleLink}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              <div>\n                <img\n                  src={\n                    poster_path\n                      ? ['https://image.tmdb.org/t/p/w500' + poster_path]\n                      : defaultPhoto\n                  }\n                  alt=\"poster\"\n                  width={200}\n                />\n              </div>\n\n              <TitleFilm> {title}</TitleFilm>\n            </Link>\n          </li>\n        );\n      })}\n    </ListNameMovies>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n"],"names":["_ref","trendMovies","_jsx","MoviesList","films","async","axios","get","concat","refs","BASE_URL","params","api_key","API_KEY","Home","movies","setMovies","useState","loader","setLoader","error","setError","useEffect","data","results","getFetch","_jsxs","children","Section","Container","style","marginTop","textAlign","color","Loader","length","POSTER_URL","LoaderWrap","styled","div","_templateObject","_taggedTemplateLiteral","LoadMessage","_templateObject2","InfinitySpin","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ListNameMovies","ul","TitleFilm","styleLink","textDecoration","location","useLocation","map","_ref2","id","title","poster_path","Link","to","state","from","src","defaultPhoto","alt","section"],"sourceRoot":""}
{"version":3,"file":"static/js/171.fcc164e9.chunk.js","mappings":"iJAAO,MAAMA,EAAO,CAClBC,SAAU,gCACVC,QAAS,mCACTC,WAAY,mC,sDCDP,MAAMC,E,OAAYC,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uD,aCCnC,MAIA,EAJmBC,KACVC,EAAAA,EAAAA,KAACN,EAAS,CAAAO,SAAC,mC,oECFb,MAAMC,EAAaP,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4DAMvBK,EAAcR,EAAAA,GAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4E,aCL9B,MAAMO,EAASA,KAElBC,EAAAA,EAAAA,MAACJ,EAAU,CAAAD,SAAA,EACTD,EAAAA,EAAAA,KAACG,EAAW,CAAAF,SAAC,gBACbD,EAAAA,EAAAA,KAACO,EAAAA,GAAY,CACXC,SAAS,EACTC,OAAO,KACPC,MAAM,MACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,MAAM,c,oECXd,MAYA,EAVuBC,eACEC,EAAAA,EAAMC,IAAI,GAADC,OAC3B5B,EAAAA,EAAKC,UAAQ2B,OAJL,UAIiBA,OAAGC,EAAE,YACjC,CACEC,OAAQ,CAAEC,QAAS/B,EAAAA,EAAKE,W,yCCPvB,MAAM8B,E,OAAc3B,GAAO4B,GAAE1B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kL,+BCMpC,MAiEA,EAjEgB0B,KACd,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BG,EAASC,IAAcJ,EAAAA,EAAAA,YAGxBR,GADWa,EAAAA,EAAAA,KACGC,SAoBpB,OAlBAC,EAAAA,EAAAA,YAAU,KACWnB,WACjB,IACEW,GAAU,GACVG,GAAS,GACT,MACEM,MAAM,QAAEC,UACAC,EAAelB,GACzBY,EAAWK,EACb,CAAE,MAAOR,GACPC,GAAS,EACX,CAAC,QACCH,GAAU,EACZ,GAEFY,EAAc,GACb,CAACnB,KAGFb,EAAAA,EAAAA,MAACgB,EAAW,CAAArB,SAAA,CACTwB,IAAUzB,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IACjBuB,IAAS5B,EAAAA,EAAAA,KAACD,EAAAA,EAAU,IACpB+B,GACCA,EAAQS,KACNC,IAMO,IANN,GACCrB,EAAE,OACFsB,EAAM,QACNC,EAAO,WACPC,EACAC,gBAAgB,YAAEC,IACnBL,EACC,OACElC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OACE8C,IACED,EACI,kCAAoCA,EACpCE,EAENC,IAAI,qBAGR1C,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,WAASwC,MACZzC,EAAAA,EAAAA,KAAA,KAAAC,SAAIyC,KACJpC,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,SAAO0C,UAdLxB,EAgBJ,IAIZW,GAA8B,IAAnBA,EAAQmB,SAAgBjD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,2BAC5B,C","sources":["apiJs/refs.js","components/ErrMassage/ErrMasege.styled.js","components/ErrMassage/ErrMassage.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","apiJs/reviews.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '8151a21e5e94d6656b5dd6100a756468',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMasege.styled';\n\nconst ErrMessage = () => {\n  return <ErrorText>Error, Please reload this page!</ErrorText>;\n};\n\nexport default ErrMessage;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <InfinitySpin\n        visible={true}\n        height=\"50\"\n        width=\"400\"\n        ariaLabel=\"infinity-spin-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        color=\"#353538\"\n      />\n    </LoaderWrap>\n  );\n};\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmReviews = async id => {\n  const responce = await axios.get(\n    `${refs.BASE_URL}${END_POINT}${id}/reviews`,\n    {\n      params: { api_key: refs.API_KEY },\n    }\n  );\n\n  return responce;\n};\nexport default getFilmReviews;\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n\n  img {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n  }\n`;\n","import getFilmReviews from '../../apiJs/reviews';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport defaultPhoto from '../../img/noAvailable.jpg';\nimport { ReviewsList } from './Reviews.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport ErrMessage from 'components/ErrMassage/ErrMassage';\n\nconst Reviews = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [reviews, setReviews] = useState();\n\n  const moviesId = useParams();\n  const id = moviesId.moviesId;\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { results },\n        } = await getFilmReviews(id);\n        setReviews(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getReviews(id);\n  }, [id]);\n\n  return (\n    <ReviewsList>\n      {loader && <Loader />}\n      {error && <ErrMessage />}\n      {reviews &&\n        reviews.map(\n          ({\n            id,\n            author,\n            content,\n            created_at,\n            author_details: { avatar_path },\n          }) => {\n            return (\n              <li key={id}>\n                <div>\n                  <img\n                    src={\n                      avatar_path\n                        ? 'https://image.tmdb.org/t/p/w500' + avatar_path\n                        : defaultPhoto\n                    }\n                    alt=\"author avatar\"\n                  ></img>\n                </div>\n                <div>\n                  <p>Author: {author}</p>\n                  <p>{content}</p>\n                  <p>Time: {created_at}</p>\n                </div>\n              </li>\n            );\n          }\n        )}\n      {reviews && reviews.length === 0 && <li>There is no comment.</li>}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n"],"names":["refs","BASE_URL","API_KEY","POSTER_URL","ErrorText","styled","div","_templateObject","_taggedTemplateLiteral","ErrMessage","_jsx","children","LoaderWrap","LoadMessage","_templateObject2","Loader","_jsxs","InfinitySpin","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","async","axios","get","concat","id","params","api_key","ReviewsList","ul","Reviews","loader","setLoader","useState","error","setError","reviews","setReviews","useParams","moviesId","useEffect","data","results","getFilmReviews","getReviews","map","_ref","author","content","created_at","author_details","avatar_path","src","defaultPhoto","alt","length"],"sourceRoot":""}
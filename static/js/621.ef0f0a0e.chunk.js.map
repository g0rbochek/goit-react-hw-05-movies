{"version":3,"file":"static/js/621.ef0f0a0e.chunk.js","mappings":"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","sources":["apiJs/query.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/SearchFilm/SearchFilm.jsx","Pages/Movies.jsx","apiJs/refs.js","components/ErrMassage/ErrMasege.styled.js","components/ErrMassage/ErrMassage.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.js"],"sourcesContent":["import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `search/movie`;\n\nconst getFilmQuery = async query => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}`, {\n    params: { api_key: refs.API_KEY, query: query },\n  });\n\n  return responce;\n};\nexport default getFilmQuery;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Input = styled(Field)`\n  width: 300px;\n  font-size: 13px;\n  padding: 6px 0 4px 10px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n`;\n\nexport const SearchButton = styled.button`\n  font-size: 13px;\n  font-weight: 600;\n  padding: 6px 10px 4px 10px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n  margin-top: 40px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(204, 203, 203);\n  }\n\n  &:active {\n    background-color: rgb(179, 179, 179);\n  }\n`;\n","import { Formik, Form } from 'formik';\nimport { Input, SearchButton } from './SearchForm.styled';\n// import { Input, SearchButton } from '/';\n\nconst SearchForm = ({ initialValues, onSubmit }) => {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form autoComplete=\"off\">\n        <SearchButton type=\"submit\">Search</SearchButton>\n        <Input type=\"text\" name=\"film\" placeholder=\"Enter film...\" />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default SearchForm;\n","import getFilmQuery from '../../apiJs/query';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport ErrMessage from 'components/ErrMassage/ErrMassage';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from '../SearchForm/SearchForm';\n\nconst SearchFilm = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [films, setFilms] = useState();\n  const [params, setParams] = useSearchParams();\n\n  const initialValue = {\n    film: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    setParams(values);\n    resetForm();\n  };\n\n  useEffect(() => {\n    const filmQuery = params.get('film');\n\n    const getMoveQuery = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { results },\n        } = await getFilmQuery(filmQuery);\n        setFilms(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getMoveQuery(filmQuery);\n  }, [params]);\n\n  return (\n    <div>\n      {loader && <Loader />}\n      {error && <ErrMessage />}\n      <SearchForm initialValues={initialValue} onSubmit={handleSubmit} />\n      {films && <MoviesList films={films} />}\n    </div>\n  );\n};\n\nexport default SearchFilm;\n","import React from 'react';\nimport { Container } from 'components/Container/Container.styled';\nimport { Section } from 'components/Section/Section.styled';\n// import MoveDetails from 'Pages/MovieDetails/MovieDetail';\nimport SearchFilm from 'components/SearchFilm/SearchFilm';\n\nconst Movies = () => {\n  return (\n    <main>\n      <Section>\n        <Container>\n          <SearchFilm />\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '8151a21e5e94d6656b5dd6100a756468',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMasege.styled';\n\nconst ErrMessage = () => {\n  return <ErrorText>Error, Please reload this page!</ErrorText>;\n};\n\nexport default ErrMessage;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <InfinitySpin\n        visible={true}\n        height=\"50\"\n        width=\"400\"\n        ariaLabel=\"infinity-spin-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        color=\"#353538\"\n      />\n    </LoaderWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListNameMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n\n  li {\n    border-radius: 10px;\n    background-color: white;\n    padding: 10px;\n    width: 200px;\n    margin-bottom: 10px;\n    font-weight: 600;\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n      0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n    justify-content: center;\n  }\n\n  img {\n    border-radius: 10px;\n    margin-bottom: 5px;\n    display: block;\n  }\n`;\nexport const TitleFilm = styled.div`\n  display: flex;\n  padding: 10px 10px;\n  justify-content: center;\n  align-items: center;\n`;\n","import {\n  ListNameMovies,\n  TitleFilm,\n} from 'components/MoviesList/MoviesList.styled';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from '../../img/noAvailable.jpg';\n\nconst MoviesList = ({ films }) => {\n  const styleLink = {\n    textDecoration: 'none',\n    color: 'black',\n  };\n\n  const location = useLocation();\n  return (\n    <ListNameMovies>\n      {films.map(({ id, title, poster_path }) => {\n        return (\n          <li key={id}>\n            <Link\n              style={styleLink}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              <div>\n                <img\n                  src={\n                    poster_path\n                      ? ['https://image.tmdb.org/t/p/w500' + poster_path]\n                      : defaultPhoto\n                  }\n                  alt=\"poster\"\n                  width={200}\n                />\n              </div>\n\n              <TitleFilm> {title}</TitleFilm>\n            </Link>\n          </li>\n        );\n      })}\n    </ListNameMovies>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n"],"names":["async","axios","get","concat","refs","BASE_URL","params","api_key","API_KEY","query","Input","styled","Field","_templateObject","_taggedTemplateLiteral","SearchButton","button","_templateObject2","_ref","initialValues","onSubmit","_jsx","Formik","children","_jsxs","Form","autoComplete","type","name","placeholder","SearchFilm","loader","setLoader","useState","error","setError","films","setFilms","setParams","useSearchParams","useEffect","filmQuery","data","results","getFilmQuery","getMoveQuery","Loader","ErrMessage","SearchForm","film","handleSubmit","values","resetForm","MoviesList","Movies","Section","Container","POSTER_URL","ErrorText","div","LoaderWrap","LoadMessage","InfinitySpin","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","ListNameMovies","ul","TitleFilm","styleLink","textDecoration","location","useLocation","map","_ref2","id","title","poster_path","Link","style","to","state","from","src","defaultPhoto","alt","section"],"sourceRoot":""}
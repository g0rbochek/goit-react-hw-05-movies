{"version":3,"file":"static/js/958.00af2e2b.chunk.js","mappings":"iJAAO,MAAMA,EAAO,CAClBC,SAAU,gCACVC,QAAS,mCACTC,WAAY,mC,oECAd,MAYA,EAVoBC,eACKC,EAAAA,EAAMC,IAAI,GAADC,OAC3BP,EAAAA,EAAKC,UAAQM,OAJL,UAIiBA,OAAGC,EAAE,YACjC,CACEC,OAAQ,CAAEC,QAASV,EAAAA,EAAKE,W,6CCPvB,MAAMS,EAAWC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kGAQpBC,EAAYJ,EAAAA,GAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yNAUtBI,EAAgBP,EAAAA,GAAOK,IAAGG,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2B,wCCZvC,MAwDA,EAxDaM,KACX,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,IAG3BhB,GADWqB,EAAAA,EAAAA,KACGC,SAoBpB,OAlBAC,EAAAA,EAAAA,YAAU,KACQ3B,WACd,IACEmB,GAAU,GACVG,GAAS,GACT,MACEM,MAAM,KAAEL,UACAM,EAAYzB,GACtBoB,EAAQD,EACV,CAAE,MAAOF,GACPC,GAAS,EACX,CAAC,QACCH,GAAU,EACZ,GAEFW,EAAW,GACV,CAAC1B,KAGF2B,EAAAA,EAAAA,MAACxB,EAAQ,CAAAyB,SAAA,CACNd,IAAUe,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACjBb,IAASY,EAAAA,EAAAA,KAACE,EAAAA,EAAU,IACpBZ,EAAKa,KAAIC,IAA4C,IAA3C,GAAEjC,EAAE,aAAEkC,EAAY,KAAEC,EAAI,UAAEC,GAAWH,EAC9C,OACEN,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACrB,EAAS,CAAAoB,UACRC,EAAAA,EAAAA,KAAA,OACEQ,IACEH,EACI,kCAAoCA,EACpCI,EAENC,IAAI,QACJC,MAAO,SAGXb,EAAAA,EAAAA,MAAChB,EAAa,CAAAiB,SAAA,EACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,KACJR,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYQ,UAdVpC,EAgBJ,IAGRmB,EAAKsB,OAAS,IAAKZ,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BACd,C,sDC1DR,MAAMc,E,OAAYtC,GAAOK,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uD,aCCnC,MAIA,EAJmBwB,KACVF,EAAAA,EAAAA,KAACa,EAAS,CAAAd,SAAC,mC,oECFb,MAAMe,EAAavC,EAAAA,GAAOK,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4DAMvBqC,EAAcxC,EAAAA,GAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4E,aCL9B,MAAMuB,EAASA,KAElBH,EAAAA,EAAAA,MAACgB,EAAU,CAAAf,SAAA,EACTC,EAAAA,EAAAA,KAACe,EAAW,CAAAhB,SAAC,gBACbC,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CACXC,SAAS,EACTC,OAAO,KACPP,MAAM,MACNQ,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,MAAM,c","sources":["apiJs/refs.js","apiJs/cast.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/ErrMassage/ErrMasege.styled.js","components/ErrMassage/ErrMassage.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx"],"sourcesContent":["export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '8151a21e5e94d6656b5dd6100a756468',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmCast = async id => {\n  const responce = await axios.get(\n    `${refs.BASE_URL}${END_POINT}${id}/credits`,\n    {\n      params: { api_key: refs.API_KEY },\n    }\n  );\n\n  return responce;\n};\nexport default getFilmCast;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n`;\n\nexport const PhotoWrap = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n    0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n\n  img {\n    display: block;\n  }\n`;\nexport const ActorInfoWrap = styled.div`\n  width: 150px;\n`;\n","import getFilmCast from '../../apiJs/cast';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorInfoWrap, CastList, PhotoWrap } from './Cast.styled';\nimport defaultPhoto from '../../img/noAvailable.jpg';\nimport { Loader } from 'components/Loader/Loader';\nimport ErrMessage from 'components/ErrMassage/ErrMassage';\n\nconst Cast = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [cast, setCast] = useState([]);\n\n  const moviesId = useParams();\n  const id = moviesId.moviesId;\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { cast },\n        } = await getFilmCast(id);\n        setCast(cast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getCast(id);\n  }, [id]);\n\n  return (\n    <CastList>\n      {loader && <Loader />}\n      {error && <ErrMessage />}\n      {cast.map(({ id, profile_path, name, character }) => {\n        return (\n          <li key={id}>\n            <PhotoWrap>\n              <img\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                    : defaultPhoto\n                }\n                alt=\"actor\"\n                width={150}\n              />\n            </PhotoWrap>\n            <ActorInfoWrap>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </ActorInfoWrap>\n          </li>\n        );\n      })}\n      {cast.length < 1 && <p>Without information</p>}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMasege.styled';\n\nconst ErrMessage = () => {\n  return <ErrorText>Error, Please reload this page!</ErrorText>;\n};\n\nexport default ErrMessage;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <InfinitySpin\n        visible={true}\n        height=\"50\"\n        width=\"400\"\n        ariaLabel=\"infinity-spin-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        color=\"#353538\"\n      />\n    </LoaderWrap>\n  );\n};\n"],"names":["refs","BASE_URL","API_KEY","POSTER_URL","async","axios","get","concat","id","params","api_key","CastList","styled","ul","_templateObject","_taggedTemplateLiteral","PhotoWrap","div","_templateObject2","ActorInfoWrap","_templateObject3","Cast","loader","setLoader","useState","error","setError","cast","setCast","useParams","moviesId","useEffect","data","getFilmCast","getCast","_jsxs","children","_jsx","Loader","ErrMessage","map","_ref","profile_path","name","character","src","defaultPhoto","alt","width","length","ErrorText","LoaderWrap","LoadMessage","InfinitySpin","visible","height","ariaLabel","wrapperStyle","wrapperClass","color"],"sourceRoot":""}
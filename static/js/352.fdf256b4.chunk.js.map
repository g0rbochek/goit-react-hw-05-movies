{"version":3,"file":"static/js/352.fdf256b4.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.styled.js","apiJs/film.js","components/AdditInform/AdditInform.styled.js","components/AdditInform/AdditInform.jsx","Pages/MovieDetails/MovieDetail.jsx","components/SearchFilm/SearchFilm.styled.js","apiJs/query.js","components/SearchFilm/SearchFilm.jsx","Pages/Movies.jsx","apiJs/refs.js","components/ErrMassage/ErrMasege.styled.js","components/ErrMassage/ErrMassage.jsx","components/ListMovies/ListMovies.styled.js","components/FilmItem/FilmItem.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Section/Section.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Genres = styled.div`\n  display: flex;\n  gap: 10px;\n`;\nexport const FilmPageWrap = styled.div`\n  display: block;\n\n  button {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  width: 400px;\n  border-radius: 10px;\n  background-color: white;\n  padding: 10px;\n\n  box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n    0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n\n  img {\n    min-width: 100%;\n    border-radius: 10px;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 10px;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  font-size: 20px;\n  padding: 10px;\n`;\n\nexport const BackLink = styled.p`\n  display: block;\n  font-size: 15px;\n  font-weight: 600;\n  padding: 10px 20px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n  width: max-content;\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(204, 203, 203);\n  }\n\n  &:active {\n    background-color: rgb(179, 179, 179);\n  }\n`;\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmInfo = async id => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}${id}`, {\n    params: { api_key: refs.API_KEY },\n  });\n\n  return responce;\n};\nexport default getFilmInfo;\n","import styled from 'styled-components';\n\nexport const AdditInformWrap = styled.div`\n  h3 {\n    font-size: large;\n    font-weight: 600;\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { AddInfoList } from '../../Pages/MovieDetails/MovieDetails.styled';\nimport { AdditInformWrap } from './AdditInform.styled';\nimport { Link } from 'react-router-dom';\n\nconst AdditInform = () => {\n  return (\n    <AdditInformWrap>\n      <h3>Additional information</h3>\n      <AddInfoList>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </AddInfoList>\n    </AdditInformWrap>\n  );\n};\n\nexport default AdditInform;\n","import React, { Suspense, useRef, useState } from 'react';\nimport {\n  BackLink,\n  FilmPageWrap,\n  Genres,\n  ImgWrap,\n  InfoWrap,\n} from './MovieDetails.styled';\nimport { refs } from '../../apiJs/refs';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport getFilmInfo from '../../apiJs/film';\nimport { useEffect } from 'react';\nimport { Container } from 'components/Container/Container.styled';\nimport { Section } from 'components/Section/Section.styled';\nimport defaultPhoto from '../../img/noAvailable.jpg';\nimport { Loader } from 'components/Loader/Loader';\nimport AdditInform from '../../components/AdditInform/AdditInform';\nimport ErrMessage from 'components/ErrMassage/ErrMassage';\n\nconst MoveDetails = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const moveId = useParams();\n  const id = moveId.moviesId;\n  const [film, setFilm] = useState(moveId);\n\n  const { poster_path, title, vote_average, overview, genres = [] } = film;\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  // показує underfind і викидає на головну сторінку\n\n  // console.log(backLinkLocationRef);\n\n  useEffect(() => {\n    const getFilm = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const { data } = await getFilmInfo(id);\n        setFilm(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getFilm(id);\n  }, [id]);\n\n  const urlPoster = refs.POSTER_URL + poster_path;\n\n  return (\n    <main>\n      <Section>\n        {loader && <Loader />}\n        {error && <ErrMessage />}\n        {poster_path && (\n          <Container>\n            <FilmPageWrap>\n              <Link to={backLinkLocationRef.current}>\n                <BackLink>Go Back</BackLink>\n              </Link>\n              <InfoWrap>\n                <ImgWrap>\n                  <img\n                    src={poster_path ? urlPoster : defaultPhoto}\n                    alt=\"films poster\"\n                    width={300}\n                  />\n                </ImgWrap>\n                <div>\n                  <h1>{title}</h1>\n                  <div>\n                    <h2>User Score:</h2>\n                    <p> {Math.ceil(vote_average * 10)}%</p>\n                  </div>\n                  <div>\n                    <h2>Overview:</h2>\n                    <p> {overview}</p>\n                  </div>\n                  <div>\n                    <h2>Genres:</h2>\n                    <Genres>\n                      {genres.map(({ name, id }) => (\n                        <span key={id}>{name}</span>\n                      ))}\n                    </Genres>\n                  </div>\n                </div>\n              </InfoWrap>\n            </FilmPageWrap>\n            <AdditInform />\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </Container>\n        )}\n      </Section>\n    </main>\n  );\n};\n\nexport default MoveDetails;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Input = styled(Field)`\n  width: 300px;\n  font-size: 13px;\n  padding: 6px 0 4px 10px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n`;\n\nexport const SearchButton = styled.button`\n  font-size: 13px;\n  font-weight: 600;\n  padding: 6px 10px 4px 10px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n  margin-top: 40px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(204, 203, 203);\n  }\n\n  &:active {\n    background-color: rgb(179, 179, 179);\n  }\n`;\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `search/movie`;\n\nconst getFilmQuery = async query => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}`, {\n    params: { api_key: refs.API_KEY, query: query },\n  });\n\n  return responce;\n};\nexport default getFilmQuery;\n","import { Formik, Form } from 'formik';\nimport { Input, SearchButton } from './SearchFilm.styled';\nimport getFilmQuery from '../../apiJs/query';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport FilmItem from 'components/FilmItem/FilmItem';\nimport { Loader } from 'components/Loader/Loader';\nimport ErrMessage from 'components/ErrMassage/ErrMassage';\n\nconst SearchFilm = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [films, setFilms] = useState();\n  const [params, setParams] = useSearchParams();\n  // console.log(useSearchParams());\n  const initialValue = {\n    film: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    setParams(values);\n    resetForm();\n  };\n\n  useEffect(() => {\n    const filmQuery = params.get('film');\n\n    const getMoveQuery = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { results },\n        } = await getFilmQuery(filmQuery);\n        setFilms(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getMoveQuery(filmQuery);\n  }, [params]);\n\n  return (\n    <div>\n      {loader && <Loader />}\n      {error && <ErrMessage />}\n      <Formik initialValues={initialValue} onSubmit={handleSubmit}>\n        <Form autoComplete=\"off\">\n          <SearchButton type=\"submit\">Search</SearchButton>\n          <Input type=\"text\" name=\"film\" placeholder=\"Enter film...\" />\n          {/* <ErrorMessage name=\"film\" component=\"div\" /> */}\n        </Form>\n      </Formik>\n      {films && <FilmItem films={films} />}\n    </div>\n  );\n};\n\nexport default SearchFilm;\n","import React from 'react';\nimport { Container } from 'components/Container/Container.styled';\nimport { Section } from 'components/Section/Section.styled';\nimport MoveDetails from 'Pages/MovieDetails/MovieDetail';\nimport SearchFilm from 'components/SearchFilm/SearchFilm';\n\nconst Movies = () => {\n  return (\n    <main>\n      <Section>\n        <Container>{<SearchFilm /> ?? <MoveDetails />}</Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '8151a21e5e94d6656b5dd6100a756468',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMasege.styled';\n\nconst ErrMessage = () => {\n  return <ErrorText>Error, Please reload this page!</ErrorText>;\n};\n\nexport default ErrMessage;\n","import styled from 'styled-components';\n\nexport const ListNameMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n\n  li {\n    border-radius: 10px;\n    background-color: white;\n    padding: 10px;\n    width: 200px;\n    margin-bottom: 10px;\n    font-weight: 600;\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n      0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n    justify-content: center;\n  }\n\n  img {\n    border-radius: 10px;\n    margin-bottom: 5px;\n    display: block;\n  }\n`;\nexport const TitleFilm = styled.div`\n  display: flex;\n  padding: 10px 10px;\n  justify-content: center;\n  align-items: center;\n`;\n","import {\n  ListNameMovies,\n  TitleFilm,\n} from 'components/ListMovies/ListMovies.styled';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from '../../img/noAvailable.jpg';\n\nconst FilmItem = ({ films }) => {\n  const styleLink = {\n    textDecoration: 'none',\n    color: 'black',\n  };\n\n  const location = useLocation();\n  // console.log(location.pathname);\n  return (\n    <ListNameMovies>\n      {films.map(({ id, title, poster_path }) => {\n        return (\n          <li key={id}>\n            <Link\n              style={styleLink}\n              to={`/movies/${id}`}\n              state={{ from: location.pathname }}\n            >\n              <div>\n                <img\n                  src={\n                    poster_path\n                      ? ['https://image.tmdb.org/t/p/w500' + poster_path]\n                      : defaultPhoto\n                  }\n                  alt=\"poster\"\n                  width={200}\n                />\n              </div>\n\n              <TitleFilm> {title}</TitleFilm>\n            </Link>\n          </li>\n        );\n      })}\n    </ListNameMovies>\n  );\n};\n\nexport default FilmItem;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <InfinitySpin\n        visible={true}\n        height=\"50\"\n        width=\"400\"\n        ariaLabel=\"infinity-spin-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        color=\"#353538\"\n      />\n    </LoaderWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n"],"names":["Genres","styled","_templateObject","_taggedTemplateLiteral","FilmPageWrap","_templateObject2","ImgWrap","_templateObject3","InfoWrap","_templateObject4","AddInfoList","_templateObject5","BackLink","_templateObject6","getFilmInfo","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","responce","_context","prev","next","axios","concat","refs","params","api_key","sent","abrupt","stop","_x","apply","arguments","AdditInformWrap","_jsxs","children","_jsx","Link","to","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","loader","setLoader","_useState3","_useState4","error","setError","moveId","useParams","moviesId","_useState5","_useState6","film","setFilm","poster_path","title","vote_average","overview","_film$genres","genres","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getFilm","_yield$getFilmInfo","data","t0","finish","urlPoster","Section","Loader","ErrMessage","Container","current","src","defaultPhoto","alt","width","Math","ceil","map","_ref2","name","AdditInform","Suspense","Outlet","Input","Field","SearchButton","getFilmQuery","query","films","setFilms","_useSearchParams","useSearchParams","_useSearchParams2","setParams","filmQuery","get","getMoveQuery","_yield$getFilmQuery","results","Formik","initialValues","onSubmit","values","resetForm","Form","autoComplete","type","placeholder","FilmItem","_SearchFilm","SearchFilm","MoveDetails","BASE_URL","API_KEY","POSTER_URL","ErrorText","ListNameMovies","TitleFilm","styleLink","textDecoration","color","style","pathname","LoaderWrap","LoadMessage","InfinitySpin","visible","height","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}